class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        if graph is None or len(graph)==0:
            return 0
        n=len(graph)
        colors= [-1]*n
        color=0
        
        for i in range(n):
            if colors[i]==-1:
                self.dfs(graph,colors,color,n,i)
                color+=1
        print(color)       
        groups=[0]*color
        for i in range(0,n):
            # print(groups)
            groups[colors[i]]+=1
        infected=[0]*color
        for node in initial:
            infected[colors[node]]+=1
        res= float("inf")
        for node in initial:
            col=colors[node]
            tot=infected[col]
            if tot==1:
                if res==float("inf"):
                    res=node
                elif groups[col]>groups[colors[res]]:
                    res=node
                elif groups[col]==groups[colors[res]]and node<res:
                    res=node
        if res==float("inf"):
            for node in initial:
                res=min(res,node)
        return res
     
    def dfs(self,graph,colors,color,n,node):
        if colors[node]!=-1:
            return
        colors[node]=color
        for i in range(n):
            if graph[node][i]==1:
                self.dfs(graph,colors,color,n,i)
        
        
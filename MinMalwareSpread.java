//TC will be O(n^2)
//SC will be O(n)

import java.util.Arrays;

class MinMalwareSpread {
    int[] colors;
    int color;
    public int minMalwareSpread(int[][] graph, int[] initial) {
        if(graph == null || graph.length == 0){
            return -1;
        }

        int n = graph.length;
        colors = new int[n];
        Arrays.fill(colors, -1);
        for(int i = 0; i < n; i++){
            if(colors[i] == -1){
                dfs(graph, i);
                color++;
            }
        }
        int[] groups = new int[color];
        for(int i =0; i<n; i++){
            int index = colors[i];
            groups[index]++;
        }
        int[] totalInfected = new int[color];
        for(int i =0; i < initial.length; i++){
            int index = colors[initial[i]];
            totalInfected[index]++;
        }
        int answer = -1;
        for(int i = 0; i < initial.length; i++){
            int groupNumber = colors[initial[i]];
            if(totalInfected[groupNumber] == 1){
                if(answer == -1){
                    answer = initial[i];
                }
                else if(groups[groupNumber]> groups[colors[answer]]){
                    answer = initial[i];
                }
                else if(groups[groupNumber] == groups[colors[answer]] && initial[i] < answer){
                    answer = initial[i];
                }
            }
        }
        if(answer == -1){
            int min = Integer.MAX_VALUE;
            for(int i = 0; i < initial.length; i++){
                min = Math.min(min, initial[i]);
            }
            return min;
        }
        return answer;
    }

    private void dfs(int[][] graph, int u){
        //base
        if(colors[u] != -1){
            return;
        }
        //logic
        colors[u] = color;
        for(int i = 0; i < colors.length; i++){
            if(graph[u][i] == 1){
                dfs(graph,i);
            }
        }
    }

    public static void main(String[] args){
        MinMalwareSpread obj = new MinMalwareSpread();
        int[][] graph = {{1,1,0},{1,1,0},{0,0,1}};
        int[] initial = {0,1};
        System.out.println(obj.minMalwareSpread(graph,initial));
    }
}
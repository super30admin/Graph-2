class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        
        colors = {}
        color = 0
        
        def dfs(node, color):
            nonlocal colors
            if node not in colors:
                colors[node] = color
                for j in range(len(graph)):
                    if graph[node][j] == 1:
                        dfs(j, color)
            return 
        for i in range(len(graph)):
            if i not in colors:
                dfs(i, color)
                color+=1

        
        groups = Counter(colors.values())

        numberOfInfected = Counter()
        for i in initial:
            colorOfNode = colors[i]
            numberOfInfected[colorOfNode]+=1
        
   
        outputValue =-100000

        for i in initial:
            groupIndex = colors[i]
            if numberOfInfected[groupIndex]==1:
                if outputValue == float("inf"):
                    outputValue = i
                elif groups[groupIndex]>groups[colors[outputValue]] or groups[groupIndex]==groups[colors[outputValue]] and i<outputValue:
                    outputValue = i
 
    
        return outputValue if outputValue!=float("inf") else min(initial)
Time: O(N^2)
Space: O(N)
